(ros::roseus-add-msgs "soft_exterior_hand")
(load "package://aeroeus/aero-interface.l")
(aero-init)
(send *aero* :angle-vector (send *ri* :state :potentio-vector))

(ros::advertise "/servo_states" soft_exterior_hand::UInt16Array 1)

(setq pub-msg (instance soft_exterior_hand::UInt16Array :init))
(send pub-msg :data #i(80 107 128 120 160 30 180 270))
(ros::publish "/servo_states" pub-msg)
(ros::duration-sleep 1.5)

(send *aero* :angle-vector #f(-13.9589 -9.94925 -16.98 -135.148 0.0 0.0 0.0 0.03 -4.9686 9.96804 19.96 -135.148 29.98 4.98473 -19.805 0.0 0.01 24.8547 0.0 0.01 0.0 0.0 42.3845 -60.8815 -30.0 30.0))
(send *ri* :angle-vector (send *aero* :angle-vector) 2000)
(send *ri* :wait-interpolation)

(send *ri* :speak-jp "風船をください")
(setq pub-msg (instance soft_exterior_hand::UInt16Array :init))
(send pub-msg :data (integer-vector 120 128 125 102 120 30 180 270))
(ros::publish "/servo_states" pub-msg)
(ros::duration-sleep 2)

(setq cnt 0)
(while (< cnt 1)
  (setq cnt 0)
  (let ((sensor-states (one-shot-subscribe "/sensor_states" soft_exterior_hand::UInt16Array :timeout 20000)))
    (setq data (send sensor-states :data))
    (dotimes (i 14)
      (when (> (elt data i) 10)
        (setq cnt (+ cnt 1))))
))

(send *ri* :start-grasp :rarm)
(setq deg 270)
(dotimes (i 6)
  (setq deg (- deg 40))
  (when (< deg 20)
    (exit))
  (send pub-msg :data (integer-vector 120 128 125 102 120 30 180 deg))
  (ros::publish "/servo_states" pub-msg)
  (ros::duration-sleep 0.2))

(dotimes (i 5)
  (setq deg 30)
  (dotimes (i 3)
    (setq deg (+ deg 20))
    (when (> deg 90)
      (exit))
    (send pub-msg :data (integer-vector 120 128 125 102 120 30 180 deg))
    (ros::publish "/servo_states" pub-msg)
    (ros::duration-sleep 0.1))

  (setq deg 90)
  (dotimes (i 3)
    (setq deg (- deg 20))
    (when (< deg 30)
      (exit))
    (send pub-msg :data (integer-vector 120 128 125 102 120 30 180 deg))
    (ros::publish "/servo_states" pub-msg)
    (ros::duration-sleep 0.1))

  (ros::duration-sleep 0.2))

